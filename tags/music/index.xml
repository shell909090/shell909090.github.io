<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Music on Shell&#39;s Home</title>
    <link>//blog.shell909090.org/tags/music/</link>
    <description>Recent content in Music on Shell&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC-BY-SA4.0</copyright>
    <lastBuildDate>Thu, 10 May 2012 02:14:04 +0800</lastBuildDate>
    
	<atom:link href="//blog.shell909090.org/tags/music/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>全部和谐音程表（泛音表）</title>
      <link>//blog.shell909090.org/blog/archives/2168/</link>
      <pubDate>Thu, 10 May 2012 02:14:04 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/2168/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; for i in [(i, j, 12 * math.log(float(j)/i, 2)) for i, j in itertools.permutations([1,2,3,4,5,6], 2) if i &amp;lt; j]: print i
... (1, 2, 12.0) (1, 3, 19.019550008653876) (1, 4, 24.0) (1, 5, 27.863137138648348) (1, 6, 31.019550008653873) (2, 3, 7.019550008653875) (2, 4, 12.0) (2, 5, 15.863137138648348) (2, 6, 19.019550008653876) (3, 4, 4.980449991346124) (3, 5, 8.843587129994475) (3, 6, 12.0) (4, 5, 3.863137138648348) (4, 6, 7.019550008653875) (5, 6, 3.1564128700055254)  </description>
    </item>
    
    <item>
      <title>升调降调的规则</title>
      <link>//blog.shell909090.org/blog/archives/2164/</link>
      <pubDate>Mon, 07 May 2012 09:21:06 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/2164/</guid>
      <description>为什么C加一个升调变成G？
这个要从大调式讲起。
大调式是以大三度为基础构建的调式，主音到中音为大三度，中音到属音为小三度，两者构成大三和弦。主音到属音为纯五度，属音到主音为纯四度，大调式的三个基础音之间，都是和谐音程关系。以C大调而言，就是do mi so。
好吧，C大调之所以叫做C大调，是因为以中音C为do。那么G大调呢？以中音G为do？对的，问题是，C大调的所有音，是否能够不做任何变化的构成G大调的音？
这是不可能的，C大调的音不做变化唯一能够构成的只有a小调。G大调一定需要对C大调的音做升降的。
为什么？因为C大调的音程关系是全全半全全全半，这个在小学就教了。通过这个，你可以数出上面说的三个纯音关系。当我们位移到G=do的时候，你会发现，不做变化的话，音程就变成了全全半全全半全，这就糟了。所以，需要对C调的fa(即F)升半个音，来回复大调调式。
常识上我们知道，12平均率是对称关系，所以上述过程可以运用数学归纳法作用于整个中音音阶。即，每个大调可以通过升该调中的fa半个音，变成另一个大调。后者刚刚好比前者高一个纯五度。
降调关系亦然，可以类比。
小调关系亦然，不过小调使用全半全全半全全作为结构，主音到中音为小三度，中音到属音为大三度，两者构成小三和弦。主音到属音为纯五度，属音到主音为纯四度，小调式的三个基础音之间，也都是和谐音程关系。
稍微数一下就知道，小调式上的所有音，可以构成比自己高小三度的大调，两者称为关系大调和关系小调。
虽然音是一样的，然而主音中音属音的位置完全不同，因此调式色彩完全不同。</description>
    </item>
    
    <item>
      <title>和谐音程的条件</title>
      <link>//blog.shell909090.org/blog/archives/2152/</link>
      <pubDate>Tue, 24 Apr 2012 01:53:01 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/2152/</guid>
      <description>和谐音程的发生条件，是冠音的震动频率和根音呈倍数关系。以此为基础，我们做一个简单计算：
首先是八度：
&amp;gt;&amp;gt;&amp;gt; 12\*math.log(2, 2) 12.0  即，12个半音(高八度)是和谐音程。
&amp;gt;&amp;gt;&amp;gt; 12\*math.log(3.0/2, 2) 7.019550008653875 &amp;gt;&amp;gt;&amp;gt; 12\*math.log(4.0/3, 2) 4.980449991346124 &amp;gt;&amp;gt;&amp;gt; 12\*math.log(5.0/4, 2) 3.863137138648348 &amp;gt;&amp;gt;&amp;gt; 12\*math.log(6.0/5, 2) 3.1564128700055254 &amp;gt;&amp;gt;&amp;gt; 12\*math.log(7.0/6, 2) 2.6687090560373763  即，7个半音(纯五度)，5个半音(纯四度)，约4个半音(大三度)，约3个半音(小三度)，为和谐音程。由数值可以看出，纯四纯五的和谐程度又超过大三小三，因为和绝对和谐震动比例的误差更小。
再下面也是可以发生和谐音程的，只是误差更大而已。
为什么是“十二平均率”的原因也很清楚了。
&amp;gt;&amp;gt;&amp;gt; 1/(math.log(3.0/2, 2)-math.log(4.0/3, 2)) 5.884949192361715  从数值上看，六平均率也是可以的。但是六平均率只能保证第二和三个和谐音程关系在音阶上，要保证第四个，就必须是11平均以上。
&amp;gt;&amp;gt;&amp;gt; 1/(math.log(4.0/3, 2)-math.log(5.0/4, 2)) 10.740053666281327  综合两者，12平均率可以基本保证第二三四三个和谐音程都在音阶上。
同时，也基本满足人类对声音的分辨能力。</description>
    </item>
    
  </channel>
</rss>