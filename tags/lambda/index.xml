<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lambda on Shell&#39;s Home</title>
    <link>//blog.shell909090.org/tags/lambda/</link>
    <description>Recent content in lambda on Shell&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC-BY-SA4.0</copyright>
    <lastBuildDate>Mon, 10 Nov 2008 14:08:00 +0800</lastBuildDate>
    
	<atom:link href="//blog.shell909090.org/tags/lambda/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SCIP,lambda,Church</title>
      <link>//blog.shell909090.org/blog/archives/45/</link>
      <pubDate>Mon, 10 Nov 2008 14:08:00 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/45/</guid>
      <description>贝壳最近在看SCIP，感觉受益匪浅。其中有一个2.6，使用函数表达数字，很难理解。贝壳查了查资料，这篇（http://blogs.sun.com/yongsun/entry/lambda%E6%BC%94%E7%AE%97%E4%B8%8Echurch%E8%AE%A1%E6%95%B0 ）写的很好，贝壳就不多说了。贝壳把自己写的内容贴上来，作为一个借鉴。
(define zero (lambda (f) (lambda (x) x))) (define one (lambda (f) (lambda (x) (f x)))) (define two (lambda (f) (lambda (x) (f (f x))))) (define three (lambda (f) (lambda (x) (f (f (f x)))))) (define (add-1 n) (lambda (f) (lambda (x) (f ((n f) x))))) (define (add m n) (lambda (f) (lambda (x) ((m f) ((n f) x))))) (define (mult m n) (lambda (f) (m (n f)))) (define (show-func-number n) (define (inc x) (+ x 1)) ((n inc) 0)) (display (show-func-number zero)) (newline) (display (show-func-number one)) (newline) (display (show-func-number (add-1 one))) (newline) (display (show-func-number (add one two))) (newline) (display (show-func-number (mult two three))) (newline)  结果：</description>
    </item>
    
  </channel>
</rss>