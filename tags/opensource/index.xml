<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>opensource on Shell&#39;s Home</title>
    <link>//blog.shell909090.org/tags/opensource/</link>
    <description>Recent content in opensource on Shell&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC-BY-SA4.0</copyright>
    <lastBuildDate>Mon, 10 Sep 2012 11:58:22 +0800</lastBuildDate><atom:link href="//blog.shell909090.org/tags/opensource/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自由软件的基础讲解</title>
      <link>//blog.shell909090.org/blog/archives/2237/</link>
      <pubDate>Mon, 10 Sep 2012 11:58:22 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/2237/</guid>
      <description>授权 本文档内容基于cc-by-sa3.0下发布。
您可以自由复制、发行、展览、表演、放映、广播或通过信息网络传播本作品，创作演绎作品，对本作品进行商业性使用。惟须遵守下列条件。
署名 — 您必须按照作者或者许可人指定的方式对作品进行署名。 相同方式共享 — 如果您改变、转换本作品或者以本作品为基础进行创作，您只能采用与本协议相同的许可协议发布基于本作品的演绎作品。 具体信息请查看署名-相同方式共享3.0。
从一个软件说起 给大家介绍一个软件，comix。comix是一个由python和GTK+写成的漫画浏览软件。
支持zip, rar， tar等格式的压缩包直接浏览 跨平台 有自己的用户群和wiki页面 但是某天，我在Windows下使用comix的时候发现，在Windows下这货不支持压缩包直接浏览。而且手里有大量包是7z格式，木有办法使用。
检查源码，发现是/的问题。蛋疼的跨系统。
根据网络上的提示，我发现有两个解决问题的方法。
使用封闭免费软件，例如honeyview，然后转跳到问题3 自己修掉这个bug，反正只有一处，然后转跳到问题4 7z格式木有办法，只能苦等最新版本出来，完了。
需要7z支持，自己又做了一个7z支持的补丁，从此所有漫画都可以直接浏览
我希望向官网提供我的补丁，发现软件已经失去维护
在寻找的时候，我发现有爱好者维护了一个新的分支，mcomix。解决了很多历史bug，同时支持了7z
原来在问题2上，有一个隐藏选项，直接用mcomix，完了。
这说明，在你想出一个需求的时候，最好先问问资深用户，是不是已经被解决了。很多时候，不要重复造轮子。
修改源码？听起来好像很麻烦 如果不是职业程序员，还是别想了。调试软件和修改源码需要专业知识（当然，不需要是计算机系出身，但是需要专门的学习）。但是掌握技巧后，修改一个bug并不是很困难。然而，拥有修改源码的能力，表示这个软件和那些“你无能为力”的软件有所不同。
神码叫做自由软件 无论如何，你可以自由使用。这隐含了软件是免费的（或者满足一定条件下免费）。 源码开放。用户有研究如何使用的自由。 重新发布源码。用户可以让别人使用，或者包含在其他产品中使用。 改善软件。用户有改善软件的自由。 所以，自由软件的前提是，软件必须是开源软件。
两个软件的不同遭遇 Foxpro VS Sql Server
老计算机用户都应当记得foxbase和foxpro这两个软件。当年风光一时的数据库软件，在被微软收购后，就黯淡无光了。尽管退出市场的主要原因是因为单机开发模式并不适应网络大规模开发，但是这只需要设立一个网络层就可以解决。微软在收购Sql Server后，为了保证其市场地位，收购并雪藏了foxpro。目前该软件已经停止开发，最新版本的支持也即将过期。
Mysql VS Oracle
同样可怕的事情发生在mysql身上，做web开发的应该无人不知其大名。在Oracle收购后，Mysql也面临和foxpro同样的遭遇，更巧的是，他们同样是数据库类软件。然而Oracle无法雪藏Mysql。因为一旦Oracle雪藏Mysql，其他人可以继续Mysql的某个开源分支继续开发一个完全不同的东西。Mysql的创始人之一，Michael Widenius支持这个做法。
因此，直到目前为止，Oracle都没有停止对Mysql的支持。
当然，由于未来的风险，一些人在选择新数据库的时候转向了PostgreSQL，或者其他选择。然而已有的系统不会受到影响，已经学了Mysql的用户也不会受到影响。
如果当年Mysql是闭源，那么。
很多基于Mysql的改造是不可能的，例如mysql proxy。 今天Mysql管理员大概就得赶快再学些别的东西。 自由软件有版权么？ 有，版权是一个人完成一个产品后自然具备的权力。开放源码并不剥夺这个权力。一个人完成了一本小说，并让别人观看了，难道他就失去版权了么？我们一般在谈论版权的时候，往往和其他权力混淆起来。实际上，版权这个东西，其实指的是著作权。基本权力包括两种，人格著作权和财产著作权。衍生权力就更多了。
人格著作权 公开发表 署名 扭曲 &amp;hellip; 财产著作权 复制 公开口述 公开播送 改编 &amp;hellip; 自由软件主要放弃的，是对衍生权力的追究。即，作者授权你，在一定的条件下，可以进行合法的复制/改编，而不追究你的责任。但这不表示作者放弃版权。
授权协议 既然作者授权你如何如何，那么这就算是一份授权协议。我们下面列一下常见的授权协议：</description>
    </item>
    
    <item>
      <title>参与开源软件的几个问题详说</title>
      <link>//blog.shell909090.org/blog/archives/1848/</link>
      <pubDate>Fri, 01 Jul 2011 11:16:19 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/1848/</guid>
      <description>我刚写了一篇关于参加开源软件的，网上看的人是一堆一堆的。我就再多废话两句，说说我对参与开源软件的几个看法。
参与开源软件，首先要弄明白，你为什么要参加。很多人很热情，想着为世界贡献就来了。热情是好事，可是开源软件不需要理想主义者。在从事开源软件前，你一定要明白，你参加开源软件的目的在哪里。
有些人比较功利，也就比较简单，如果你希望参与开源项目，留名找工作。那你最好就是帮忙翻译。一方面，翻译文档对技术没有过高要求。另一方面，这确实也是参与了开源项目。而且从效果来看，熟悉一个项目首先就要熟悉文档。如果文档都是由你来翻译的，还有谁比你更熟悉文档呢？当老板问，谁熟悉tornado的时候，别人都说，我用过。你说的是，这玩意的中文文档是我翻译的。这对将来找工作是个很有利的加分。类似可以做的事情还有写文档，或者是使用手册、心得、入门指引，HOWTO之类的。不过这些事情就要求你至少熟悉项目，有一定技术。
如果你对现有的开软有想法，到不必一定直接加入。自己修改一下，做一个patch，然后发给项目的负责人说明一下情况。如果你的patch做的不算太次，那么项目管理者应该会表示感谢，并且接受。如果你常用这个项目，说不定他会给你一个可以提交的版本管理器账户。但是水准太差就不要凑热闹了，你的代码大家都看得到，丢脸不要丢到全世界去。记得一个空格引发的杯具么？（http://www.oschina.net/news/19000/a-space-lead-disaster） 如果你对各个开源项目都不满意，想做一个新的，独立的项目。我强烈建议你慎重考虑，毕竟现有很多项目的作者都不是傻瓜。新开项目的管理和推广是一个非常麻烦的问题，非常可能的是，你在很长时间内都得不到什么有效的支援，不得不一个人奋战。虽然有很多人很热情，但是他们很多不知道该做什么（否则本文就没有意义了），更糟的是空有热情但没有能力。
如果你是最后一个，只是对开源项目有热情。我觉得你就先别着急凑热闹了。为什么上面我说了好几次热情是好事，但是开软不需要空有热情的人？因为开软的程序员基本奉行一个原则，有空废话还不如多写两行代码。他们不会帮你培训patch的用法，版本系统的管理，bug系统用法，更不会给你解说某个函数实现的时候为什么不能调用另一个函数（当然，如果你的运气很好，也有人会）。参与一个开软，必须要自行付出时间精力去学习相关的知识。作为开软的程序员，最怕的就是一堆空有热情的用户/贡献者在那里叫嚷，为什么这个函数不能调用另一个函数？我用这个办法简化了代码，效果很好，打了一个补丁出来。同学阿，你没看以前的讨论么？在某种条件下，这会引发循环调用。
热情是好事，不过这是在拥有正确的方法和良好的能力的前提下。如果你有热情，不妨从学习如何提问，如何融入社区，如何对项目进行打包和使用开始。而后逐步开始学习文档的编写、翻译。最后为项目打补丁，贡献代码。
另外就是为哪些项目提供补丁。这个没什么好多说的，最好选择你常用的。不常用的项目，你也没那个功夫，坚持不了多久。而且通常来说，为小项目提供补丁比大项目管用，你的补丁会更加受到重视。</description>
    </item>
    
    <item>
      <title>如何参与一个开源项目</title>
      <link>//blog.shell909090.org/blog/archives/1821/</link>
      <pubDate>Thu, 02 Jun 2011 11:03:47 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/1821/</guid>
      <description>最近很多人在问如何参与一个开源项目。其实个人觉得这是一个非常傻的问题，不过还是回答一下，期望这帮人记得用google搜到这个角落，免去论坛上月经一样的天天看到这种傻问题。
为什么说傻？因为这个问题和“如何捐钱”一样，是个没法直接回答的问题。你总要有一个明确的捐献目标，或者是明确的目标项目。世界上没有一个组织，名叫“开源软件”。无论你的目标是什么，你必须找到一个确定的开源项目进行参与。
在哪里能够找到开源项目？这很不好说。一方面，你可以在sf.net(需要翻墙)和code.google.com(最好翻墙)找到相当多的开源项目，也可以在github之类的地方寻找。另一方面，你也可以在debian里面找。很多包里面附带了项目的主页，如果你觉得这个包很不错，希望做贡献，可以按照链接找过去。
如何挑选合适的开源项目？首先要和你的兴趣相符合，或者能够满足你参与开源的目标。例如你对算法非常感兴趣，让你加入一个ERP系统的定制，成天修正繁琐的业务问题，可能就会让你觉得兴趣全无。其次最好参与一些中等复杂程度，具有活力的，比较缺人的项目。像linux kernel这种规模巨大，参与人员众多的项目，本身就是一个非常巨大的工程。你要了解这个工程需要很长时间，但是大部分你觉得有价值的事情都已经有人在做了。
如何开始？具体可以先给项目管理者发一封邮件，说明自己的目标，兴趣，能力，时间，然后问问他们是否需要自己的贡献。
大多数项目最缺的人才，不是程序员。通常一个开源项目，有几个程序员在做是不成问题的。但是大部分的开源项目缺乏一些周边人员，例如到各个组织中推广项目，获得反馈。和各种dist和开源平台协调，负责收集bug，控制项目发行，进行打包。负责项目的测试和文档工作，以及英文文档的翻译工作。这些工作并不需要专业知识，但是琐碎而且费时，程序员并不大乐意做。而且控制项目的release，还有进行协调要有一定的经验，也不是程序员擅长的领域。所以相当多的开源项目，就是程序员拍脑袋写，然后用户两眼一摸黑的用。没有合适的文档，没有各种系统的适用包，没有bug和用户意见反馈。
因此贝壳也请求，所有看到文章，且有志于贡献自己的力量的人，都可以考虑参与开源项目。你不需要会写程序，也不需要精通电脑。你需要做的可能就是将文档从英文翻译成中文，或者不断使用一个软件并找出其中不合理的地方。在中国，捐献金钱是容易的，但是却不透明，也不自由。你不确定你的金钱捐献给谁，他收到多少，是否真的需要。然而如果你选择某个开源软件做捐献，你可以选择自己为谁做出贡献，也会受到全体开源软件用户的感激。</description>
    </item>
    
  </channel>
</rss>
