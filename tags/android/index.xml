<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Shell&#39;s Home</title>
    <link>//vlt1.shell909090.org/tags/android/</link>
    <description>Recent content in Android on Shell&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC-BY-SA4.0</copyright>
    <lastBuildDate>Mon, 02 Jan 2012 14:37:32 +0800</lastBuildDate>
    
	<atom:link href="//vlt1.shell909090.org/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>理想的平板</title>
      <link>//vlt1.shell909090.org/blog/archives/2050/</link>
      <pubDate>Mon, 02 Jan 2012 14:37:32 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/2050/</guid>
      <description>7寸以下宽屏，原因，可以一手拿住。
 300g以内，原因，可以一手拿住。
 厚度1cm以内，原因，拿得舒服。
 10小时续航，原因，一天可以只充电一次。
 3g支持，原因，不支持3g的不叫理想的平板。
 IPS/PLS屏幕，原因，普屏的视角的却有的时候很不爽。
 usb可充电，原因，外部电源续航方便，充电方便。
 支持TF卡，原因，方便。
 USB OTG，原因，可以拖U盘和键盘。
 GPS支持，原因，地图是很重要的。
  好吧，我们合并要求起来看看。300g以内10小时续航，目前芯片和屏幕的功耗连电池重量都不够。所以这个无形就要求更加节能和强劲的芯片，还有更加节能的屏幕。同时，这个屏幕还不能比IPS视角差。
继续等吧。</description>
    </item>
    
    <item>
      <title>小米手机入手体验</title>
      <link>//vlt1.shell909090.org/blog/archives/2026/</link>
      <pubDate>Wed, 21 Dec 2011 09:48:05 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/2026/</guid>
      <description>很好很强大
LTN和我说的时候，开头用的词就是，我的小米不打算卖你了。既然前面有“我的”两字，可见东西差不到哪里去的。入手之后感觉很好，起码比g2强多了(233)。我把一些直观体验说一下吧。
手感不错，性能优异 机器的手感沉实，屏幕贴上膜后手感流畅，g2上的光膜也很滑，但是偶尔沾水就阻力大了。小米的膜很少出现这种现象，而且触感很灵敏——当然，太灵敏了也是个问题，经常手不小心碰到返回键，然后程序就没了。
程序滑动很流畅，不愧是双核的。内存足够大，ROM也够了。我完全不折腾app2sd之类的问题，也不管内存回收，每个程序都跑的很流畅。这种表现让人用着很省心。
周边齐全 我到小米的官网上，看到了后盖，保护壳，贴膜，背贴，耳机，数据卡的官方销售。虽然和小米2000元的价位比，这些周边并不便宜，但是他们很方便。作为智能机爱好者，往往会买一些国外的水货机，这时你就知道我在说什么了。往往表面膜坏了，只能买第三方的膜，偶尔尺寸还不匹配。还有的时候线控坏了，买一个很贵，还不知道好不好用，有时候还没地方买。后盖摔坏了，也没地方配，只能去店里花大价钱修。这些问题，每个都不大，但是解决起来很麻烦，不解决很恶心。
一些问题 屏幕偶尔会卡死，大约三秒后恢复。猜测是双核cpu全部耗尽，导致失去响应。更进一步猜测，还可能内存耗尽——虽然看起来不大可能。
原配膜为了保证使用，尺寸精度相当精确，只要错一点，就没法贴上去。我自己贴了半个小时，结果满脸青春痘。没办法，只能出钱找了个专业人士。其实卖的时候，完全可以让客户选择贴好了发出来。
ROM版本控制的隐患 在一周的周期上，说这个并不合适。不过我入手后，ROM自动升级。然后就出现了有时突然没有信号的问题，只能重启。
我肯定这个问题不是真的没信号了。将手机切入飞行模式，返回后有一瞬间信号是恢复的，过三秒左右信号就没了。而且手机状态中有信号数据，但是手机打不通。这个问题反复出现，经常是在某处没有信号，重新恢复信号后就出bug，死活保持无信号状态。
按照我前一个手机的经验(G2)，这个往往和手机的ROM或者基带有关。我前一个手机的所有ROM中，有两个有这个问题的，有两个没有。而按照网络上一个帖子的说法，楼主在降级后问题也消失。反复印证下来，推测很可能是因为最新升级的ROM有这个问题，而我升级后就出现了问题。
这个属于ROM版本控制和测试的不严密，在一周不到的时间内我无法确认这点。但是我希望不是，因为一旦是ROM版本控制问题，将来后续问题还会层出不穷。个个都是莫名其妙的出现，没有精力一个个的跟。</description>
    </item>
    
    <item>
      <title>android几个常识</title>
      <link>//vlt1.shell909090.org/blog/archives/2018/</link>
      <pubDate>Fri, 16 Dec 2011 10:41:28 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/2018/</guid>
      <description>内存问题 首先，总内存量需要被各种CPU划出部分使用，剩余才是系统可用内存。这个概念差不多相当于电脑上的共享显存，系统对划走的内存是没有管理能力的，因此在/proc/meminfo中找不到这部分内存。这部分内存既不能优化也不能使用，因此其实是不可使用内存。厂家出厂内存（标称内存）和可使用内存一定存在差，具体多少看各种机型。htcg2是288m标称191m可用，p81hd是512m标称288m可用。
可用内存是linux kernel能管理的内存，这部分再会被划出一些供系统使用/服务使用/常驻程序使用。这部分是可以优化的，少编译一些ko模块，少开一些服务，少一些常驻程序，内存就会节约一点。
最后，剩下来的内存才是程序实际能用的量，htcg2和p81hd都在100-150M上下。不过程序退出时，内存并不交还给系统。而是当系统内存不足时(memory threshold，通常24m)，由系统分析目前内存中，使用频率最少的一块，然后去释放这个内存。通常而言，你在系统中开了三五个程序，然后按Home退出到桌面，再进入时程序还处于退出当时所处的状态，这就是因为还在内存中没有释放的缘故。而当你开的程序比较多，例如十多个程序，也是由Home退出到桌面，再进入最老的一个程序时，程序已经处于初始的状态。这就是因为内存不足，系统帮你杀了这个程序的缘故。如果用Back键退出，程序会直接关闭，内存释放，这个无关系统是否有空余内存。
所以，对android而言，内存只代表两件事情。一个是所能运行的最大的程序。如果总内存不足，一些一次性需要内存比较大的程序就会无法运行，特征是一运行就退出，系统没有提示错误。另一个是同时在内存中不关闭的程序的数量。内存越大，在机器中就可以保持越多的程序处于打开状态。对于新打开程序（此时内存请求较多），或者程序突然申请大量内存，系统就开始释放其他程序，此时系统会稍慢。但是在考虑是否需要使用内存优化软件的时候，不妨这么想。内存优化软件运行的时间，一般比直接kill进程还长呢。
如果觉得自己内存不足，想要优化的话，需要非常注意系统中的服务。系统中一般会有很多服务在运行，很多都是消息通知类的，例如fackbook的新消息，twitter的新消息通知，google plus的消息通知，还有微信，等等。这些消息通知每个大概都是5-10m内存不等。有的时候，如果你不需要消息通知，关闭消息通知可以有效关闭服务，例如ubersocial的消息通知是可以关闭的，而google plus和facebook就没有这个选项。如果你觉得这两个的消息浪费内存，那只有卸载他们。至于微信，你可以使用程序中的退出功能关闭微信。一旦关闭，通知服务会自动关闭。
内核模块问题 一般而言，系统内核会编译进很多东西，但是也有不少东西是不编译进去的。这些可以动态载入的东西，就叫内核模块。对android而言，其实普通用户没必要在意到底机器内的某个模块是模块形式还是编译进入了内核，所以下面统称内核功能。无论是模块还是内核形态，只要能用，就称这个功能打开。
内核常用的几个功能有，cifs，tun。
cifs是用于smb挂载的内核模块，如果内核中有这个东西，你就可以把你的某个samba服务器当作机器本地的sd卡来用。samba服务器可能听起来很陌生，不过windows文件共享就是一种samba服务器。也就是说，拥有cifs，可以将windows下面的文件当作机器的本地sd卡来随意读写。这对于家庭内使用android是个很方便的事情。
不过cifs现在用的比较少，因为ES文件管理器有个功能，可以把远程文件转换成一个http流。视频之类可以以http流模式工作的文件就可以直接远程打开。
tun是一个很重要的内核模块，因为openvpn/anyvpn都需要使用这个东西来工作。没有tun模块，这两个程序将无法工作。
存储形态问题 任何一个android设备都一定会搭配一块存储。这块存储会被切分为多个区域，模拟成一个硬盘的多个分区来使用。我们来看一个内核的启动参数，以下数据来自我的P81HD。
console=ttyS1,115200n8n androidboot.console=ttyS1 init=/init initrd=0x62000000,0x800000 mtdparts=rk29xxnand:0x00002000@0x00002000(misc),0x00004000@0x00004000(kernel),0x00008000@0x00008000(boot),0x00008000@0x00010000(recovery),0x00078000@0x00018000(backup),0x0003a000@0x00090000(cache),0x00100000@0x000ca000(userdata),0x00002000@0x001ca000(kpanic),0x00080000@0x001cc000(system),-@0x0024c000(user) bootver=2011-08-05\#2.06 firmware\_ver=0.2.3  能明显看出，存储使用的是nand，编译是针对rk29xx的，所以模块叫做rk29xxnand。mtdparts里面规定了rk29xxnand的分区特性，每组三个数据，第一个是大小，第二个是起始位置，第三个是分区名。其中userdata实际大小256m，表上面写的是1m，因此1相当于256字节。下面可以再看一下mount表。
/dev/block/mtdblock8 on /system type ext3 (ro,noatime,nodiratime,data=ordered) /dev/block/mtdblock6 on /data type ext3 (rw,nosuid,nodev,noatime,nodiratime,errors=continue,data=ordered) /dev/block/mtdblock5 on /cache type ext3 (rw,nosuid,nodev,noatime,nodiratime,errors=continue,data=ordered)  可以看出存储编号是从0开始的。分区后，存储的内容即是以ext3格式存储。
系统组织问题 android的系统组织很有意思，并不是按照FHS来组织的，却部分兼容于FHS。
android最基础的一个分区是system，这个分区被mount到/system。/etc一般都是直接link到了/system/etc下面，由此可见这个分区的重要性。这个分区一般存放所有系统内置的，不能更改的程序和数据。例如系统的内置app，framework，java基础库，so库，系统程序，等等。一般的刷机包里面，都是以zip格式打包了system的新内容。一旦这个内容被替换，系统就有了新特性。一般一个system的大小是200m-500m，不会全部用满，会留出一些方便后续的升级改造。
data里面是系统内置的存储区域，这个区域常常被误叫为手机内存。实际上内存是ram，这块类似于rom。一般是500m上下，程序安装后就是装到了这个，包括数据也保存在这里。如果这个区域不足，系统就不能安装新程序。因此有些人想出了app2sd的把戏，说白了，就是通过bind，把sd卡上的一块区域映射到这个区域的某个目录下，使得某个app的数据可以存储到sd卡上。当然，这个能够转移过去的只限于数据，代码好像是不能转移的。而且，mount需要时间，sd的读取一般也比rom更加慢和麻烦。因此app2sd后，系统启动速度会变慢，程序运行也会变慢。
一个更好的扩充data的方案（当然，也更危险）是，通过修改刷机包，将上面kernel参数改变掉，并且重新分区nand。这样，data区的大小可以增加到1g左右，而user区的大小会减小相应的量。这样处理后，手机上可以安装更多的程序，而且没有什么后遗症。
cache里面是缓存，这个直观感受并不多，也很少用满，所以不解释。程序里面一般会列出，使用多少缓存，就是指的这个区域。
权限管理问题 android手机的权限很有意思。和macbook有点类似，但不完全相同。
android手机的每个程序，都有一个权限和他相关。规定的事情可以做，不规定的不能做。估计是给程序新建了一个身份，可以做的事情做成组，然后对身份加组。但是其中，有一类特殊的权限，正常情况下是任何程序都无法申请的，即是sid权限。学过linux的应当知道，就是可以切换成root身份的权限。
android的root，基本方法都是通过某种方法将/system改成可读写，然后用自己做的su替换/system/bin/su文件。自己做的程序，会以一些方法验证某个程序是否具有su的权限（一般是弹出对话框确认），然后让他们可以拥有最高权限。可以su的程序，他们的权限表就没有意义了。
adhoc问题 adhoc是一种常见的wifi形态，特征是没有一个ap（常见的路由器即是一种ap），全部由普通的客户端电脑来进行网络连接。
android的wpa_supplicant文件做过一些修改，过滤了adhoc网络的essid。所以，如果你使用adhoc模式共享了网络，你的android设备将无法使用。
但是android是可以做出adhoc的。这是很悖论的一个事情，android自己做出的网络分享，另一台android是无法使用的。</description>
    </item>
    
    <item>
      <title>P81HD，以及任意一种Android的翻墙</title>
      <link>//vlt1.shell909090.org/blog/archives/1965/</link>
      <pubDate>Mon, 31 Oct 2011 14:24:50 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/1965/</guid>
      <description>假如，你有一台Android，不能刷机（厂家没提供ROM，也没有源码，而且可能锁了bootloader），没有ip_gre模块，没有tun模块，连iptables_filter模块都没有，那怎么办呢？没有第一个，就无法使用pptp/l2tp的内置VPN，没有第二个，就无法使用openvpn，没有第三个，就无法使用sshtunnel。如果你运气不好，这个东西连root都没有，肿末办？
很简单，你得先弄到Opera，注意Opera Mini没有测试过，据说不行。然后准备一台vps，上面不但要开ssh，而且必须在机器上有个代理。然后在地址里面输入opera:config，看到设定了？下面有一项proxy。按照参考[1]的方法设定代理，地址设定为127.0.0.1:1984。注意不要写成localhost:1984，后者不一定认。代理服务器用sshtunnel，注意不要用Socks5翻墙，必须用http模式。打开看看？是不是可以了？
原理很简单，sshtunnel使用redsocks来执行的全局翻墙。根据参考[3]，redsocks是通过iptables规则来将所有连接重定向到自身，然后包装成代理的。由于iptables_filter模块缺失，或者干脆没有root，这个路子走不通。但是启动sshtunnel后1984端口的翻墙链是好的，只是程序都不使用而已。Opear又给了我们一个自行设定代理的能力。因此，结合使用两种方法，能让你在没有模块，没有root的情况下，自行拥有翻墙能力。由于Opera只支持HTTP代理，因此你必须满足http代理翻墙要求（远程服务器上有代理，不启用socks5模式）。
参考：
1.Android下使用Opera实现Wifi代理上网
2.Android 平台的 SSH Tunnel 应用
3.redsocks on android指南</description>
    </item>
    
    <item>
      <title>android常用软件</title>
      <link>//vlt1.shell909090.org/blog/archives/1792/</link>
      <pubDate>Fri, 06 May 2011 09:56:10 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/1792/</guid>
      <description>专为职业用户介绍，菜鸟就别看了。
 barnacle wifi tether，将手机变成3G无线路由器，紧急的时候可以拿来让普通笔记本上网。当然，如果你3G带宽或者流量不够，就别考虑了。 comicbricks，漫画阅读器，支持从网络上拖一堆漫画离线慢慢看。 connectbot，功能强大的ssh客户端，支持密钥方式连接服务器，可以做简单的操作。适合在车站，想看看服务器状态的时候用。 es文件浏览器，还算不错，支持ftp和smb方式文件共享。很容易使用windows文件共享进行操作。 gtasks，如果你平时使用google calendar的任务列表管理自己的任务，gtasks就是你需要的东西。 keepassdroid，平时各种密码一大堆，是不是记不住？用keepassdroid，支持linux和windows共享密码文件，记忆一个密码就可以到处用。 openvpn settings，不解释，翻墙必备。倒是自带的pptp客户端连接不上去，很奇怪。 QQ影音，虽说腾讯到处抄，但是QQ影音做的确实不错。功能中规中矩，大部分格式都能放，而且程序体积不大。 realcalc，计算器，不解释。 seesmic，twitter客户端，支持api代理，功能强大，不解释。 sshdroid，ssh服务器端。有了这个东西后，你就不需要连接usb连线并且安装adb这个大家伙了。凡是能操作ssh的机器都能登录操作，支持文件上下传(sftp)，支持密码和密钥。 安全隧道，翻墙必备，不过是走ssh代理的。 大众点评，出门吃饭消费必备。我所知的信息最全的LBS。 静读天下，小型阅读器，可堪一用。体积比ireader小，也没那么多花哨的功能。打开文件的时候有点慢，没有别的缺点。 快图浏览，强烈推荐替代android自己的图库。速度如飞一般，图片瞬间出来。不过仔细看的话，从出来到清晰化大约有一秒的间隔，可见底下还是用模糊运算的。 麦当劳优惠券，打折优惠应用。这类应用都差不多，从网络上下载一段时间的某品牌优惠组合，然后统一显示给你，方便你直接挑合适的组合去。严格来说，麦当劳优惠券不算真的优惠券，只能算优惠组合。当然，有些品牌的产品还是需要看一眼优惠券的，这时候这类应用也提供图片的优惠券。总之，在外面混的时候，带上这个应用，不知道什么时候就有点小折扣。 迷你飞信，不介绍了。比较小巧，消息存储在系统信息里面。和系统自身整合做的不错。 墨迹天气，体积比较大，不过支持多个地区天气，预报比较准（有几个预报误差太大），皮肤不错。 淘宝，什么都不说了，在超市里尤其有用。就是家附近的沃尔玛没信号&amp;hellip;&amp;hellip; 天天动听，播放器，支持网络自动搜索，找封面和歌词。 宜搜小说，自动从网络上找最新的小说来看，追连载的利器。用这个软件连找都不必了，上下班直接看就好。  注意，此处comicbricks和宜搜小说有违反版权的问题，请对版权敏感的人不要用。</description>
    </item>
    
    <item>
      <title>用android的usb网络共享上网很爽</title>
      <link>//vlt1.shell909090.org/blog/archives/111/</link>
      <pubDate>Sat, 10 Apr 2010 15:30:00 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/111/</guid>
      <description>什么设定都不需要，直接打开usb调试和usb网络共享，然后插上线路。Linux下自动出现了usb网络设备，usb0。然后――没有然后了，随便上网吧。各种分享上网工具可以全扔掉了。</description>
    </item>
    
    <item>
      <title>android历史记录备份和应用三例</title>
      <link>//vlt1.shell909090.org/blog/archives/99/</link>
      <pubDate>Tue, 02 Mar 2010 16:10:00 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/99/</guid>
      <description>有不少不折腾会死星人已经用上andriod了吧？有没有刷机过？有没有怕手机掉过？android的联系人是同步到gmail的，不用怕。但是信息就不同不了。所以，下面介绍几个信息导出的方法。
1.aqq
用adb shell去/data/data/com.android.aqq/databases/下面，把aqq.db复制出来，sqlite3格式，随便看吧。
2.AnFetion
用adb shell去/data/data/&amp;hellip;..AnFetion2/databases/下面，把fetion.DB复制出来。
3.信息
这个是最麻烦的。去信息-&amp;gt;Menu-&amp;gt;设置-&amp;gt;导出短信里面导出。但是别高兴的太早，贝壳发现一个bug。如果你的短信里面有西文引号，会导致xml格式错误，从而无法导入。解决方法是手工删除引号。
应用，使用xsltproc，将xml转换为html来浏览。贝壳用的xslt比较简单，抄在下面。
&amp;lt;?xml version=&#39;1.0&#39; encoding=&amp;quot;GBK&amp;quot;?&amp;gt; &amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;&amp;lt;http://www.w3.org/1999/XSL/Transform&amp;gt;&amp;quot;&amp;gt; &amp;lt;xsl:template match=&amp;quot;/&amp;quot;&amp;gt; &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;xsl:for-each select=&amp;quot;//smss/address&amp;quot;&amp;gt; Phone Number:&amp;lt;xsl:value-of select=&amp;quot;@data&amp;quot;/&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;table border=&amp;quot;0&amp;quot; class=&amp;quot;rev_tab&amp;quot; width=&amp;quot;100%&amp;quot;&amp;gt; &amp;lt;xsl:for-each select=&amp;quot;sms&amp;quot;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td class=&amp;quot;rev_tab_rev&amp;quot;&amp;gt; &amp;lt;xsl:value-of select=&amp;quot;date/@data&amp;quot;/&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td class=&amp;quot;rev_tab_rev&amp;quot;&amp;gt; &amp;lt;xsl:choose&amp;gt; &amp;lt;xsl:when test=&amp;quot;read/@data = 1&amp;quot;&amp;gt;read&amp;lt;/xsl:when&amp;gt; &amp;lt;xsl:when test=&amp;quot;read/@data = 0&amp;quot;&amp;gt;unread&amp;lt;/xsl:when&amp;gt; &amp;lt;/xsl:choose&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td class=&amp;quot;rev_tab_rev&amp;quot;&amp;gt; &amp;lt;xsl:value-of select=&amp;quot;body/@data&amp;quot;/&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/xsl:for-each&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;BR/&amp;gt; &amp;lt;/xsl:for-each&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; &amp;lt;/xsl:template&amp;gt; &amp;lt;/xsl:stylesheet&amp;gt;  为了美观，你还可以修改一下xslt。xsltproc在linux下直接有包，Windows可以来信问贝壳索要移植(其实去官网上就能下到)。</description>
    </item>
    
    <item>
      <title>PC使用android上网</title>
      <link>//vlt1.shell909090.org/blog/archives/95/</link>
      <pubDate>Mon, 22 Feb 2010 10:27:00 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/95/</guid>
      <description>最简单的方法是使用android-wifi-tether，不过我这里使用不成功，原因不明。所以今天我们不去说他，我们说另外一个软件，azlink(http://code.google.com/p/azilink/)。
首先是安装。检查是否满足安装条件，如果满足的话，安装apk，这个不用多说。azlink.ovpn需要复制到电脑上，并且准备好openvpn和adb。另外，推荐在手机上也保存一个azlink.ovpn和adb，openvpn，以便在多个机器上使用。
下面开始正式的连接操作，作为测试，请先关闭手机的wifi上网功能和电脑的wifi，有线，以免影响测试结果。本文中的范例系统是Debian Testing(Squeeze)，网络环境是中国移动的CMNET(8元80M包月，很合算的)。如果环境有所差异，请照您的环境做相应调整。
1.使用usb线连接andriod和PC，此时android上会出现USB已连接的提示。
2.在android上执行azlink，并且勾第一个勾，Service active，保证系统运行。此时状态应当是Warting for connection。
3.在PC上执行adb forward tcp:41927 tcp:41927，此时可能出现service start。这个是首次运行的原因，不影响结果。
4.执行openvpn azlink.ovpn。此时会出现虚拟网络，并且android上的状态发生变化。
5.在android上，设置-&amp;gt;高级属性-&amp;gt;手机信息中，查看下面的GSM信息，一般能看到网关和DNS。请去ping一次网关，如果成功，你的事情已经成功了大半。
如果上面不成功，请联系我。如果成功，请在你的系统内重设DNS。azlink.ovpn将你的DNS指向了手机上，可手机本身无法做DNS的。因此请将你电脑的DNS重设为手机上的值。如果你高兴，也可以将azlink.ovpn中的值改掉，理论上说一个地区的移动网络中，DNS应当都是一样的。不过如果你要跨地区，这个DNS就会发生变化。因此，我无法预先给定值，也无法获得。
这是整个过程中最关键的一步。很多人说为什么无法上网，其实是可以的，只是你的DNS没有指向正确的值而已。
6.如果是CMNET，事情就到此为止了。如果是CMWAP，你还需要做一小步。找一个CMWAP能够访问的代理，设到你的浏览器里面。
作为关闭，其实拔线就可以了。不过作为程序员，我们习惯完美的析构过程。所以，下面是关闭过程。
1.恢复浏览器原先的代理设置。
2.断开openvpn，此时android上的状态会恢复Warting for connection。
3.PC上需要执行adb kill-server。这样会kill掉adb的daemon进程，否则adb会一直假转发，并且始终占用进程号。
4.在android上，关闭Service active的勾。并且，如果你喜欢，可以kill掉进程以回收内存。
5.拔USB线。
如果你曾经关闭了手机的wifi，电脑的wifi和有线，现在也可以恢复了。</description>
    </item>
    
    <item>
      <title>上网本，UMPC，手机的混血</title>
      <link>//vlt1.shell909090.org/blog/archives/54/</link>
      <pubDate>Tue, 17 Mar 2009 23:13:00 +0800</pubDate>
      
      <guid>//vlt1.shell909090.org/blog/archives/54/</guid>
      <description>贝壳最近又手痒想败家了。对象是上网本，UMPC，或者HTC G1。不过以上三者都不怎么完美，要能结合起来就非常有诱惑力了。要是价格低点那就更——
不说瞎想了，就说说上网本，UMPC，G1的概念和对应客户。以及贝壳为什么想要混合以上几个东西。
UMPC是指和电脑具有类似构架，但是更为小型的电脑设备。当然，官方有更严格的规定，例如最低分辨率，触摸屏等等。UMPC和上网本的区别主要就是官方的几个内部规定，满足就是UMPC，不满足则是上网本。但是对贝壳来说，不管这些，好用就好。贝壳希望的机器，具有7寸的触摸屏幕，对应的键盘。这样的话，贝壳可以用键盘来操作电脑(熟悉的人应该记得贝壳的快捷键使用和单手操作电脑的绝技吧)，并且触摸屏可以剩下一个触摸板的空间。
但是，仅仅以上条件却不能让贝壳满意。为什么呢？首先是因为体积。现在的上网本经典大小是230x160x30，这么大的一个家伙，就算带出门也够当板砖用了。其次，这东西不支持SIM卡插槽，这造成了非常麻烦的问题(当然，支持恐怕是更麻烦的问题)。贝壳无法通过这个本来直接上网，打电话，管理电话。
其实，后者的特性主要是针对HTC G1去的。现在的手机基本已经相当的智能，但是却有两个先天的问题。一个是没有能让人用起来很爽的键盘！这样写起程序来非常费劲(旁：汗—— ..-_-||||，手机上还不忘编程，真TMD是程序员)。其次是构架不同于经典的x86构架，扩展和使用程序都非常不方便。
如果一个本子，有200x150x30的大小，0.8kg上下的重量，支持SIM卡插槽，支持触摸屏幕，使用SSD硬盘。还可以标准的安装debian，使用linux下的各种程序。那基本就是贝壳梦想中的本子。当然，如果价格能在3000以下更好&amp;hellip;.贝壳可以拿这个本子到处跑(虽然体积还是个问题)，到处写程序看电影看小说都不成问题。还可以打手机(那可以直接从thunderbird中拨出阿～～)，GPRS上网(TMD混蛋中国移动，现在 3G还没出来呢)。
当然，现在很多手机基本也可以实现上面的功能，除了一个标准尺寸的键盘外。但是可惜的是，这些手机的系统都不是标准的系统，一般用户是无法重写和定制的。如果按照刚刚的方案来定制，那么整个机器上跑的就是一个完整的系统，甚至可以跑一个XP起来。稍微定制一下就可以当手机专用系统用了。像贝壳这样的编程人员更可以方便的给手机编程，来扩展手机的功能。
还有更好的一个方案，就是将手机回归原始。使得整个手机除了电话和短信外，什么功能都没有。而后给手机指定一个标准接口，在需要进行复杂应用的时候，直接插在上网本的外面当外接设备使用。这样手机的屏幕和键盘都可以极度精简，体积小巧方便使用。接入电脑后，非常方便的可以浏览网页，观看电影等等。其实本质上就是一个强大的手机(当然，要用经典构架)外接一个大型(相对大型)的显示器和键盘系统。</description>
    </item>
    
  </channel>
</rss>