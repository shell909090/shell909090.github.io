<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>django on Shell&#39;s Home</title>
    <link>//blog.shell909090.org/tags/django/</link>
    <description>Recent content in django on Shell&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC-BY-SA4.0</copyright>
    <lastBuildDate>Thu, 24 Nov 2011 16:54:56 +0800</lastBuildDate><atom:link href="//blog.shell909090.org/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>正好聊到django——论他的模板问题</title>
      <link>//blog.shell909090.org/blog/archives/1994/</link>
      <pubDate>Thu, 24 Nov 2011 16:54:56 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/1994/</guid>
      <description>首先先广播一个纠错，我那篇《几个模板的性能对比》，对cheetah模板没有做渲染处理，只生成了对象。因此性能出现严重误差，在此向所有被误导的朋友致歉。
——不过这并不影响django慢到渣的结果。
Shell: 他们用了django的orm，映射到了mysql
我一点办法都没有 mysql唯一能做的，就是一写多读 或者可以加入handlesocket
Bill: 为什么facebook以前好像用mysql能处理那么NB.
Shell: 多久以前的事情啊？
而且你得想，他们以前还用php呢 他们自己开发了hiphop，把php编译为了C 同样，我估计mysql他们也做了手脚 那玩意我学不来 而且，即使学的来，也不可能在django固定了范式的前提下 ——起码得给我修改范式的机会吧
Bill: 你可以改django嘛.
Shell: 太麻烦了
django已经积重难返了
这个问题，并不来自于django本身，而是来自于所有学django的人 Bill: 为什么这么说?
Shell: 由于他们的努力，django变成了一个固定的商业标准
试图对django进行修改的行为，哪怕是正面的努力，都会受到已经存在于上面的系统的抵制 例如，我开发一个django的分支，允许使用其他模板，你觉得会如何？
压根不会有人理我 因为大家都使用现有的模板系统，并且在上面做了无数的代码 很多人甚至无法升级django的版本 很多app也已经使用了现有的模板 如果我对django整合cheetah，那只能限于自用的范畴
Bill: 这么说还真是一条不归路了..
Shell: 除非他们的维护者作出很大的努力
说白了，就是官方强推
Bill: 不过到时候遇到瓶颈了,怎么办..
Shell: 但是，这样一来，很多人就根本不会升级了
怎么办？
要是有办法，他们还会找我么？
Bill: 靠硬件..
Shell: 他的页面就是3-5秒的打开时间
硬件上再增加，一个花钱，另一方面，也不可能增速啊 只能增加并发访问量
Bill: 也有点增速效果吧..处理速度快乐 快了
Shell: 怎么会呢？
你想，靠硬件是怎么靠的？
换更高频率的机器，还是加同样的机器？</description>
    </item>
    
    <item>
      <title>nginx使用fastcgi连接django时的细节</title>
      <link>//blog.shell909090.org/blog/archives/1694/</link>
      <pubDate>Tue, 15 Feb 2011 11:10:00 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/1694/</guid>
      <description>django使用PATH_INFO和SCRIPT_NAME来计算urls.py中的匹配路径，当两者都设定时，会出现URL计算结果为空，导致无法访问的问题。具体看这里。
http://aftnn.org/2009/jan/23/nginx-django-fastcgi/</description>
    </item>
    
  </channel>
</rss>
