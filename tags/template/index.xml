<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Template on Shell&#39;s Home</title>
    <link>//blog.shell909090.org/tags/template/</link>
    <description>Recent content in Template on Shell&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC-BY-SA4.0</copyright>
    <lastBuildDate>Wed, 09 Nov 2011 14:52:47 +0800</lastBuildDate>
    
	<atom:link href="//blog.shell909090.org/tags/template/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>几个模板系统的性能对比</title>
      <link>//blog.shell909090.org/blog/archives/1975/</link>
      <pubDate>Wed, 09 Nov 2011 14:52:47 +0800</pubDate>
      
      <guid>//blog.shell909090.org/blog/archives/1975/</guid>
      <description>对比目标，jinja2，cheetah，mako，webpy，bottle，tornado，django的性能。 
 方法，随机生成一个二维数组，第一列是自增数据，第二列是长度为100的随机字符串，然后生成html，比较一次生成的时间。

 说明，如果模板有编译缓存，打开。有其他方法加速，打开。生成缓存，关闭。不计算随机数据生成时间，一次生成后一直使用。   以下是文件有效内容，没用的都略去了。最后的顺序是因为我根据结果整理了一下调用次序。   -----testcheetah.tmpl-----    &amp;lt;table&amp;gt;   \#for \$i in \$l   &amp;lt;tr&amp;gt;   &amp;lt;td&amp;gt;\$i\[0\]&amp;lt;/td&amp;gt;   &amp;lt;td&amp;gt;\$i\[1\]&amp;lt;/td&amp;gt;   &amp;lt;/tr&amp;gt;   \#end for   &amp;lt;/table&amp;gt;  
 -----testdjango.html-----    &amp;lt;table&amp;gt;   {% for i in l %}   &amp;lt;tr&amp;gt;   &amp;lt;td&amp;gt;{{ i.0 }}&amp;lt;/td&amp;gt;   &amp;lt;td&amp;gt;{{ i.1 }}&amp;lt;/td&amp;gt;   &amp;lt;/tr&amp;gt;   {% endfor %}   &amp;lt;/table&amp;gt;</description>
    </item>
    
  </channel>
</rss>